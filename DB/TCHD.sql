CREATE TABLE MEMBER(
    MEM_NO NUMBER(5),
    MEM_TYPE CHAR(2) NOT NULL,
    MEM_ID VARCHAR2(15) NOT NULL,
    MEM_PWD VARCHAR2(30) NOT NULL,
    MEM_NAME VARCHAR2(45) NOT NULL,
    MEM_PHONE VARCHAR2(45) NOT NULL,
    MEM_ADDR VARCHAR2(300),
    MEM_EMAIL VARCHAR2(30) NOT NULL,
    MEM_LEAVE CHAR(1) NOT NULL,
    CONSTRAINT MEMBER_PK PRIMARY KEY(MEM_NO),
    CONSTRAINT MEMBER_CK_TYPE CHECK(MEM_TYPE IN('PM', 'GM', 'NM')),
    CONSTRAINT MEMBER_CK_LEAVE CHECK(MEM_LEAVE IN('Y', 'N')),
    CONSTRAINT MEMBER_UK_ID UNIQUE(MEM_ID),
    CONSTRAINT MEMBER_UK_EMAIL UNIQUE(MEM_EMAIL)
);

ALTER TABLE MEMBER RENAME COLUMN MEM_PWD TO MEM_PW;

COMMENT ON COLUMN MEMBER.MEM_NO IS '회원번호';
COMMENT ON COLUMN MEMBER.MEM_TYPE IS '회원유형';
COMMENT ON COLUMN MEMBER.MEM_ID IS '아이디';
COMMENT ON COLUMN MEMBER.MEM_PWD IS '비밀번호';
COMMENT ON COLUMN MEMBER.MEM_NAME IS '이름(단체명)';
COMMENT ON COLUMN MEMBER.MEM_PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.MEM_ADDR IS '주소';
COMMENT ON COLUMN MEMBER.MEM_EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.MEM_LEAVE IS '탈퇴여부';

DROP TABLE MEMBER;
COMMIT;

CREATE TABLE P_MEMBER(
    PM_NO NUMBER(5),
    PM_BIRTH VARCHAR2(30),
    PM_VO_LIST VARCHAR2(50),
    FOREIGN KEY(PM_NO) REFERENCES MEMBER(MEM_NO),
    CONSTRAINT P_MEMBER_FK_NO FOREIGN KEY(PM_NO) REFERENCES MEMBER(MEM_NO)
);

DROP TABLE P_MEMBER;
COMMIT;

COMMENT ON COLUMN P_MEMBER.PM_NO IS '회원번호';
COMMENT ON COLUMN P_MEMBER.PM_BIRTH IS '생년월일';
COMMENT ON COLUMN P_MEMBER.PM_VO_LIST IS '참가봉사명단';

CREATE TABLE G_MEMBER(
    GM_NO NUMBER(5),
    GM_REGNO VARCHAR2(30) NOT NULL,
    GM_NAME VARCHAR2(30) NOT NULL,
    GM_OK_YN CHAR(1) NOT NULL,
    CHECK(GM_OK_YN IN('Y', 'N')),
    CONSTRAINT G_MEMBER_FK_NO FOREIGN KEY(GM_NO) REFERENCES MEMBER(MEM_NO)   
);

COMMENT ON COLUMN G_MEMBER.GM_NO IS '회원번호';
COMMENT ON COLUMN G_MEMBER.GM_REGNO IS '사업자등록번호';
COMMENT ON COLUMN G_MEMBER.GM_NAME IS '대표자명';
COMMENT ON COLUMN G_MEMBER.GM_OK_YN IS '승인여부';

ALTER TABLE MEMBER
MODIFY MEM_LEAVE DEFAULT 'N';

ALTER TABLE G_MEMBER
MODIFY GM_OK_YN DEFAULT 'N';

ALTER TABLE G_MEMBER
RENAME CONSTRAINT SYS_C007464 TO G_MEMBER_CK_YN;

CREATE TABLE BOARD(
    BO_NO NUMBER(5),
    MEM_NO NUMBER(5),
    BO_TITLE VARCHAR2(30) NOT NULL,
    BO_CONTENT VARCHAR2(1000) NOT NULL,
    BO_DATE DATE DEFAULT SYSDATE,
    BO_COUNT NUMBER(3) DEFAULT 0,
    BO_DELETE_YN CHAR(1) DEFAULT 'N',
    BO_TYPE NUMBER NOT NULL,
    CHECK(BO_DELETE_YN IN('Y', 'N')),
    CONSTRAINT BOARD_PK_NO PRIMARY KEY(BO_NO),
    CONSTRAINT BOARD_FK_MEM_NO FOREIGN KEY(MEM_NO) REFERENCES MEMBER(MEM_NO),
    CONSTRAINT BOARD_CK_DEL_YN CHECK(BO_DELETE_YN IN('Y', 'N'))
);

COMMIT;

COMMENT ON COLUMN BOARD.BO_NO IS '게시글번호';
COMMENT ON COLUMN BOARD.BO_TITLE IS '게시판유형';
COMMENT ON COLUMN BOARD.MEM_NO IS '회원번호';
COMMENT ON COLUMN BOARD.BO_TITLE IS '게시글제목';
COMMENT ON COLUMN BOARD.BO_CONTENT IS '게시글내용';
COMMENT ON COLUMN BOARD.BO_DATE IS '작성일자';
COMMENT ON COLUMN BOARD.BO_COUNT IS '조회수';
COMMENT ON COLUMN BOARD.BO_DELETE_YN IS '삭제여부';

CREATE TABLE ADOPT(
    BO_NO NUMBER(5),
    BO_TYPE NUMBER(5),
    PET_KINDS VARCHAR2(5) NOT NULL,
    PET_CATEGORY VARCHAR2(40) NOT NULL,
    PET_GENDER CHAR(1) NOT NULL,
    PET_UNIGENDER CHAR(1),
    PET_NAME VARCHAR2(30) NOT NULL,
    PET_AGE VARCHAR2(10) NOT NULL,
    PET_RESCUE_DATE DATE NOT NULL,
    PET_WEIGHT NUMBER(3,1) NOT NULL,
    PET_COLOR VARCHAR2(30) NOT NULL,
    PET_SIZE CHAR(1) NOT NULL,
    PET_COMMENT VARCHAR2(300),
    ADOPT_YN CHAR(1) DEFAULT 'N',
    CONSTRAINT ADOPT_FK_BO_NO FOREIGN KEY(BO_NO) REFERENCES BOARD(BO_NO),
    CONSTRAINT ADOPT_FK_BO_TYPE FOREIGN KEY(BO_TYPE) REFERENCES CATEGORIES(CATE_NO),
    CONSTRAINT ADOPT_CK_PET_KINDS CHECK(PET_KINDS IN ('DOG', 'CAT')),
    CONSTRAINT ADOPT_CK_PET_GENDER CHECK(PET_GENDER IN ('F', 'M')),
    CONSTRAINT ADOPT_CK_PET_AGE CHECK(PET_AGE IN ('PUPPY', 'JUNIOR', 'ADULT', 'SENIOR')),
    CONSTRAINT ADOPT_CK_PET_SIZE CHECK(PET_SIZE IN ('S', 'M', 'L')),
    CONSTRAINT ADOPT_CK_YN CHECK(ADOPT_YN IN('Y', 'N'))
);

DROP TABLE ADOPT;
DROP TABLE LOST_PET;

COMMENT ON COLUMN ADOPT.BO_NO IS '게시글번호';
COMMENT ON COLUMN ADOPT.BO_TYPE IS '게시판 분류번호';
COMMENT ON COLUMN ADOPT.PET_KINDS IS '종류';
COMMENT ON COLUMN ADOPT.PET_CATEGORY IS '품종';
COMMENT ON COLUMN ADOPT.PET_GENDER IS '성별';
COMMENT ON COLUMN ADOPT.PET_UNIGENDER IS '중성화여부';
COMMENT ON COLUMN ADOPT.PET_NAME IS '이름';
COMMENT ON COLUMN ADOPT.PET_AGE IS '나이';
COMMENT ON COLUMN ADOPT.PET_RESCUE_DATE IS '구조일자';
COMMENT ON COLUMN ADOPT.PET_WEIGHT IS '몸무게';
COMMENT ON COLUMN ADOPT.PET_COLOR IS '색깔';
COMMENT ON COLUMN ADOPT.PET_SIZE IS '크기';
COMMENT ON COLUMN ADOPT.PET_COMMENT IS '하고싶은말';
COMMENT ON COLUMN ADOPT.ADOPT_YN IS '입양여부';


CREATE TABLE ADOPT_APPLY(
    APPLY_NO NUMBER(5),
    MEM_NO NUMBER(5),
    BO_NO NUMBER(5),
    APPLY_CONTENTS VARCHAR2(3500) NOT NULL,
    CONSTRAINT ADOPT_APPLY_PK_NO PRIMARY KEY(APPLY_NO),
    CONSTRAINT ADOPT_APPLY_FK_NO FOREIGN KEY(MEM_NO) REFERENCES MEMBER(MEM_NO),
    CONSTRAINT ADOPT_APPLY_BK_NO FOREIGN KEY(BO_NO) REFERENCES BOARD(BO_NO)
);


COMMENT ON COLUMN ADOPT_APPLY.APPLY_NO IS '입양신청서번호';
COMMENT ON COLUMN ADOPT_APPLY.MEM_NO IS '회원번호';
COMMENT ON COLUMN ADOPT_APPLY.BO_NO IS '게시글번호';
COMMENT ON COLUMN ADOPT_APPLY.APPLY_CONTENTS IS '입양신청서내용';

CREATE TABLE SUPPORT(
    SUP_NO NUMBER(5),
    MEM_NO NUMBER(5),
    SUP_PRICE NUMBER(10) NOT NULL,
    SUP_DATE DATE DEFAULT SYSDATE,
    CONSTRAINT SUPPORT_PK_NO PRIMARY KEY(SUP_NO),
    CONSTRAINT SUPPOET_FK_NO FOREIGN KEY(MEM_NO) REFERENCES MEMBER(MEM_NO)
);

COMMENT ON COLUMN SUPPORT.SUP_NO IS '후원번호';
COMMENT ON COLUMN SUPPORT.MEM_NO IS '회원번호';
COMMENT ON COLUMN SUPPORT.SUP_PRICE IS '후원금액';
COMMENT ON COLUMN SUPPORT.SUP_DATE IS '후원일자';

CREATE TABLE VOLUNTEER(
    BO_NO NUMBER(5),
    VO_MAXMEMBER NUMBER(2) NOT NULL,
    VO_APPLYMEMBER NUMBER(2) DEFAULT 0,
    VO_DEADLINE_YN CHAR(1) DEFAULT 'N',
    VO_DATE DATE NOT NULL,
    VO_AREA VARCHAR2(25) NOT NULL,
    VO_PLACE VARCHAR2(300) NOT NULL,
    VO_COMMENT VARCHAR2(300) ,
    CONSTRAINT VOLUNTEER_FK_NO FOREIGN KEY(BO_NO) REFERENCES BOARD(BO_NO),
    CONSTRAINT VOLUNTEER_CK_DEADLINE_YN CHECK(VO_DEADLINE_YN IN ('Y', 'N')) 
);

ALTER TABLE VOLUNTEER RENAME COLUMN VO_MAXMEMVER TO VO_MAXMEMBER;

COMMENT ON COLUMN VOLUNTEER.BO_NO IS '게시글번호';
COMMENT ON COLUMN VOLUNTEER.VO_MAXMEMBER IS '정원';
COMMENT ON COLUMN VOLUNTEER.VO_APPLYMEMBER IS '신청인원';
COMMENT ON COLUMN VOLUNTEER.VO_DEADLINE_YN IS '마감유무';
COMMENT ON COLUMN VOLUNTEER.VO_DATE IS '봉사일시';
COMMENT ON COLUMN VOLUNTEER.VO_AREA IS '지역선택';
COMMENT ON COLUMN VOLUNTEER.VO_PLACE IS '봉사지';
COMMENT ON COLUMN VOLUNTEER.VO_COMMENT IS '내용';

CREATE TABLE NOTICE(
    BO_NO NUMBER(5),
    NOTICE_SUBJECT VARCHAR2(20) NOT NULL,
    CONSTRAINT NOTICE_FK_NO FOREIGN KEY(BO_NO) REFERENCES BOARD(BO_NO)
);

COMMENT ON COLUMN NOTICE.BO_NO IS '게시글번호';
COMMENT ON COLUMN NOTICE.NOTICE_SUBJECT IS '말머리';

CREATE TABLE QUESTIONS(
    BO_NO NUMBER(5),
    BO_PW NUMBER(4),
    CONSTRAINT QUESTRIONS_FK_NO FOREIGN KEY(BO_NO) REFERENCES BOARD(BO_NO)
);

COMMENT ON COLUMN QUESTIONS.BO_NO IS '게시글번호';
COMMENT ON COLUMN QUESTIONS.BO_PW IS '게시글비밀번호';

CREATE TABLE COMMENTS(
    COM_NO NUMBER(5),
    MEM_NO NUMBER(5),
    BO_NO NUMBER(5),
    COM_CONTENT VARCHAR2(1000),
    COM_DATE DATE DEFAULT SYSDATE,
    COM_DELETE_YN CHAR(1) DEFAULT 'N',
    CONSTRAINT COMMETNS_PK_NO PRIMARY KEY(COM_NO),
    CONSTRAINT COMMENTS_FK_MEM_NO FOREIGN KEY(MEM_NO) REFERENCES MEMBER(MEM_NO),
    CONSTRAINT COMMENTS_FK_BO_NO FOREIGN KEY(BO_NO) REFERENCES BOARD(BO_NO),
    CONSTRAINT COMMENTS_CK_DELETE_YN CHECK(COM_DELETE_YN IN('Y', 'N'))
);

DROP TABLE COMMENTS;
COMMIT;

COMMENT ON COLUMN COMMENTS.COM_NO IS '댓글번호';
COMMENT ON COLUMN COMMENTS.MEM_NO IS '회원번호';
COMMENT ON COLUMN COMMENTS.BO_NO IS '게시글번호';
COMMENT ON COLUMN COMMENTS.COM_CONTENT IS '댓글내용';
COMMENT ON COLUMN COMMENTS.COM_DATE IS '댓글작성일자';
COMMENT ON COLUMN COMMENTS.COM_DELETE_YN IS '댓글삭제여부';

CREATE TABLE HOSPITAL(
    HOS_NO NUMBER(5),
    HOS_NAME VARCHAR2(50) NOT NULL,
    HOS_ADDR VARCHAR2(300) NOT NULL,
    HOS_PHONE VARCHAR2(20) NOT NULL,
    CONSTRAINT HOSPITAL_PK_NO PRIMARY KEY(HOS_NO)
);

COMMENT ON COLUMN HOSPITAL.HOS_NO IS '병원번호';
COMMENT ON COLUMN HOSPITAL.HOS_NAME IS '병원명';
COMMENT ON COLUMN HOSPITAL.HOS_ADDR IS '병원주소';
COMMENT ON COLUMN HOSPITAL.HOS_PHONE IS '병원전화번호';

CREATE TABLE FILES(
    FILE_NO NUMBER(5),
    BO_NO NUMBER(5),
    FILE_NAME VARCHAR2(100) NOT NULL,
    CONSTRAINT FILES_PK_NO PRIMARY KEY(FILE_NO),
    CONSTRAINT FILES_FK_BO_NO FOREIGN KEY(BO_NO) REFERENCES BOARD(BO_NO)
);

COMMENT ON COLUMN FILES.FILE_NO IS '파일번호';
COMMENT ON COLUMN FILES.BO_NO IS '게시글번호';
COMMENT ON COLUMN FILES.FILE_NAME IS '파일명';

DROP TABLE FILES;
COMMIT;

CREATE TABLE FILES(
   FILE_NO   NUMBER ,
   BO_NO   NUMBER   NOT NULL,
   ORIGIN_NAME   VARCHAR2(255 BYTE) NOT  NULL,
   CHANGE_NAME   VARCHAR2(255 BYTE) NOT  NULL,
   FILE_PATH   VARCHAR2(1000 BYTE) NOT  NULL,
   UPLOAD_DATE   DATE  NOT NULL,
   FILE_LEVEL   NUMBER  NOT NULL,
   DOWNLOAD_COUNT   NUMBER  DEFAULT 0,
   STATUS   VARCHAR2(1 BYTE)   DEFAULT 'N',
   CONSTRAINT FILE_PK_NO PRIMARY KEY(FILE_NO),
   CONSTRAINT FILE_FK_BO_NO FOREIGN KEY (BO_NO) REFERENCES BOARD(BO_NO)
);
ALTER TABLE FILES DROP COLUMN CATE_NO;
ALTER TABLE FILES ADD(CATE_NO NUMBER(5));
ALTER TABLE FILES ADD CONSTRAINT FILE_FK_CATE_NO FOREIGN KEY(CATE_NO) REFERENCES CATEGORIES(CATE_NO)
ON DELETE CASCADE;
COMMIT;


COMMENT ON COLUMN BOARD.BO_TYPE IS '게시판분류번호';

COMMENT ON COLUMN FILES.FILE_NO IS '파일번호';
COMMENT ON COLUMN FILES.BO_NO IS '게시글번호';
COMMENT ON COLUMN FILES.ORIGIN_NAME IS '원본파일명';
COMMENT ON COLUMN FILES.CHANGE_NAME IS '수정파일명';
COMMENT ON COLUMN FILES.FILE_PATH IS '파일경로';
COMMENT ON COLUMN FILES.UPLOAD_DATE IS '업로드날짜';
COMMENT ON COLUMN FILES.FILE_LEVEL IS '파일순서';
COMMENT ON COLUMN FILES.DOWNLOAD_COUNT IS '다운로드횟수';
COMMENT ON COLUMN FILES.STATUS IS '삭제여부';

CREATE TABLE CATEGORIES(
    CATE_NO NUMBER,
    CATE_NAME VARCHAR2(30 BYTE) NOT NULL,
    CONSTRAINT CATEGORIES_PK_NO PRIMARY KEY(CATE_NO)
);

COMMENT ON COLUMN CATEGORIES.CATE_NO IS '게시판 분류번호';
COMMENT ON COLUMN CATEGORIES.CATE_NAME IS '게시판 분류명';



CREATE SEQUENCE  SEQ_MEMBER_NO  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
CREATE SEQUENCE  SEQ_BOARD_NO  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
CREATE SEQUENCE  SEQ_COMMENT_NO  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
CREATE SEQUENCE  SEQ_SUPPORT_NO  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
CREATE SEQUENCE  SEQ_APPLY_NO  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
CREATE SEQUENCE  SEQ_HOSPITAL_NO  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
CREATE SEQUENCE  SEQ_FILE_NO  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

DROP SEQUENCE SEQ_BOARD_NO;
DROP SEQUENCE SEQ_COMMENT_NO;
DROP SEQUENCE SEQ_SUPPORT_NO;
DROP SEQUENCE SEQ_FILE_NO;
-- 입양신청서 시퀀스번호 없애고, ADOPT의 BO_NO를 참조 (테스트)
DROP SEQUENCE SEQ_APPLY_NO;

COMMIT;

ALTER TABLE P_MEMBER DROP CONSTRAINT PMEMBER_FK_NO;
ALTER TABLE P_MEMBER ADD CONSTRAINT PMEMBER_FK_NO FOREIGN KEY (PM_NO) REFERENCES MEMBER(MEM_NO)
ON DELETE CASCADE;

ALTER TABLE G_MEMBER DROP CONSTRAINT GMEMBER_FK_NO;
ALTER TABLE G_MEMBER ADD CONSTRAINT GMEMBER_FK_NO FOREIGN KEY (GM_NO) REFERENCES MEMBER(MEM_NO)
ON DELETE CASCADE;

ALTER TABLE P_MEMBER MODIFY (PM_BIRTH DATE);


ALTER TABLE BOARD ADD(BO_TYPE NUMBER);
COMMENT ON COLUMN BOARD.BO_TYPE IS '게시판분류번호';

GRANT CREATE VIEW TO TCHD;

INSERT INTO BOARD(BO_NO, MEM_NO, BO_TITLE, BO_CONTENT, BO_DATE, BO_COUNT, BO_DELETE_YN, BO_TYPE)
        VALUES(1, 1, '베베', '테스트', '2020-08-27', 0, 'N', 1); 
INSERT INTO BOARD(BO_NO, MEM_NO, BO_TITLE, BO_CONTENT, BO_DATE, BO_COUNT, BO_DELETE_YN, BO_TYPE)
        VALUES(2, 2, '문의사항', '테스트2', '2020-08-27', 0, 'N', 2); 

INSERT INTO ADOPT(BO_NO, BO_TYPE, PET_KINDS, PET_CATEGORY, PET_GENDER, PET_UNIGENDER,
                PET_NAME, PET_AGE, PET_RESCUE_DATE, PET_WEIGHT, PET_COLOR, PET_SIZE, PET_COMMENT, ADOPT_YN)
            VALUES(1, 1, 'DOG', '포메', 'M', 'Y',
                    '베베', 'JUNIOR', '2020-08-27', '3.5', '그레이', 'S', '테스트', 'N');

-- 입양게시판 목록보기 뷰
CREATE OR REPLACE VIEW ALIST
AS
SELECT ROWNUM RNUM, DESCBOARD.*
FROM (SELECT BO_NO, ADOPT.BO_TYPE, CATE_NAME, MEM_ID, PET_KINDS, PET_CATEGORY, PET_GENDER, 
            PET_UNIGENDER, PET_NAME, PET_AGE, PET_RESCUE_DATE, PET_WEIGHT, PET_COLOR, PET_SIZE, PET_COMMENT, ADOPT_YN
        FROM BOARD
            JOIN MEMBER USING (MEM_NO)
            JOIN CATEGORIES ON (BO_TYPE = CATE_NO)
            JOIN ADOPT USING (BO_NO)
        WHERE BO_DELETE_YN = 'N' AND ADOPT_YN = 'N'
        ORDER BY BO_DATE DESC) DESCBOARD;
               
  
-- 입양게시판 목록보기 파일 뷰
CREATE OR REPLACE VIEW FLIST
AS
SELECT ROWNUM RNUM, DESCADOPT.*
FROM (SELECT FILE_NO, BO_NO, BO_TYPE, ORIGIN_NAME, CHANGE_NAME, FILE_PATH, UPLOAD_DATE, FILE_LEVEL, STATUS
        FROM ADOPT
            JOIN FILES USING(BO_NO)
        WHERE ADOPT_YN = 'N' AND STATUS = 'N' AND FILE_LEVEL = 0
        ORDER BY UPLOAD_DATE DESC) DESCADOPT;
        
        
-- 파일 검색 뷰
CREATE OR REPLACE VIEW FSEARCH
AS
SELECT ROWNUM RNUM, DESCADOPT.*
FROM (SELECT FILE_NO, BO_NO, BO_TYPE, PET_KINDS, PET_GENDER, PET_SIZE, ORIGIN_NAME, CHANGE_NAME, FILE_PATH, UPLOAD_DATE, FILE_LEVEL, STATUS
        FROM ADOPT
            JOIN FILES USING(BO_NO)
        WHERE ADOPT_YN = 'N' AND STATUS = 'N' AND FILE_LEVEL = 0
        ORDER BY UPLOAD_DATE DESC) DESCADOPT;
COMMIT;

   
SELECT * FROM FILES;
SELECT * FROM FLIST WHERE RNUM BETWEEN 1 AND 6;
SELECT * FROM ALIST WHERE RNUM BETWEEN 1 AND 6;

-- 입양게시판 상세보기 뷰
CREATE OR REPLACE VIEW ADETAIL
AS
SELECT DESCBOARD.*
FROM (SELECT BO_NO, ADOPT.BO_TYPE, CATE_NAME, MEM_ID, PET_KINDS, PET_CATEGORY, PET_GENDER, 
            PET_UNIGENDER, PET_NAME, PET_AGE, PET_RESCUE_DATE, PET_WEIGHT, PET_COLOR, PET_SIZE, PET_COMMENT, ADOPT_YN
        FROM BOARD
            JOIN MEMBER USING (MEM_NO)
            JOIN CATEGORIES ON (BO_TYPE = CATE_NO)
            JOIN ADOPT USING (BO_NO)
        WHERE BO_DELETE_YN = 'N' AND ADOPT_YN = 'N'
        ORDER BY BO_DATE DESC) DESCBOARD;
        
SELECT * FROM ALIST WHERE RNUM BETWEEN 1 AND 1 AND BO_TYPE = 1;
SELECT * FROM FLIST WHERE RNUM BETWEEN 1 AND 1 AND BO_TYPE = 1;
        
INSERT INTO CATEGORIES (CATE_NO, CATE_NAME)
VALUES (1, '입양게시판'); 

INSERT INTO CATEGORIES (CATE_NO, CATE_NAME)
VALUES (2, '문의게시판');

INSERT INTO CATEGORIES (CATE_NO, CATE_NAME)
VALUES (3, '봉사게시판');

INSERT INTO CATEGORIES (CATE_NO, CATE_NAME)
VALUES (4, '공지사항');

INSERT INTO CATEGORIES (CATE_NO, CATE_NAME)
VALUES (5, '입양신청서');



CREATE OR REPLACE FORCE VIEW MYBOARDLIST
AS 
 SELECT ROWNUM RNUM,MEM_NO, BOARD.BO_NO, BO_TITLE, BO_DATE,CATE_NAME ,COM_NO,COM_CONTENT, COM_DATE FROM MEMBER 
JOIN BOARD 
USING(MEM_NO)
LEFT JOIN COMMENTS 
USING(MEM_NO)
JOIN CATEGORIES
ON(BO_TYPE=CATE_NO)
WHERE BO_DELETE_YN='N'
ORDER BY BO_DATE DESC, COM_DATE DESC;


CREATE OR REPLACE VIEW QLIST
AS
SELECT ROWNUM RNUM, DESCBOARD.*
FROM (SELECT B.BO_NO, BO_TYPE, CATE_NAME, BO_TITLE, BO_CONTENT, BO_COUNT, BO_DATE, MEM_NO, MEM_ID, BO_DELETE_YN, MEM_LEAVE
    FROM BOARD B
    JOIN CATEGORIES ON (BO_TYPE = CATE_NO)
    JOIN MEMBER USING (MEM_NO)
WHERE BO_DELETE_YN = 'N' AND MEM_LEAVE = 'N'
ORDER BY BO_DATE DESC) DESCBOARD;


 CREATE OR REPLACE VIEW ANSWERQLIST
 AS 
 SELECT DISTINCT ROWNUM RNUM , BO_NO, B.MEM_NO, BO_TITLE, BO_CONTENT, BO_DATE, CATE_NAME,  MEM_ID FROM BOARD B
JOIN MEMBER  M
on(B.MEM_NO=M.MEM_NO)
JOIN questions Q
USING (BO_NO)
LEFT JOIN comments C
using (BO_NO)
JOIN CATEGORIES 
ON(BO_TYPE=CATE_NO)
WHERE BO_DELETE_YN='N' AND COM_NO IS NULL
ORDER BY BO_DATE DESC;


CREATE OR REPLACE VIEW VLIST
AS
SELECT ROWNUM RNUM, DESCBOARD.*
FROM (SELECT BO_NO, BO_TYPE, CATE_NAME, BO_TITLE, BO_COUNT, BO_DATE, MEM_NO, MEM_ID, BO_DELETE_YN
      FROM BOARD
        JOIN CATEGORIES ON (BO_TYPE = CATE_NO)
        JOIN MEMBER USING(MEM_NO)
      WHERE BO_DELETE_YN = 'N'
      ORDER BY BO_DATE DESC) DESCBOARD;


CREATE OR REPLACE VIEW NOTOK_GMEMBERLIST 
AS 
 SELECT ROWNUM RNUM, N.MEM_NO, N.MEM_TYPE, N.MEM_ID, N.MEM_PW, N.MEM_NAME, N.MEM_PHONE, N.MEM_ADDR, N.MEM_EMAIL, N.MEM_LEAVE, N.GM_NO, N.GM_REGNO, N.GM_NAME, N.GM_OK_YN 
 FROM
( SELECT * FROM MEMBER JOIN G_MEMBER ON(MEM_NO=GM_NO) WHERE GM_OK_YN='N' AND MEM_LEAVE='N') N;


CREATE OR REPLACE VIEW NLIST
AS
SELECT ROWNUM RNUM, a.* FROM(SELECT BO_NO, BO_TITLE, BO_CONTENT, BO_DATE, BO_COUNT,NOTICE_SUBJECT FROM BOARD
JOIN NOTICE
USING(BO_NO)
WHERE BO_DELETE_YN='N') a;


 CREATE OR REPLACE FORCE VIEW "TCHD"."QDETAIL" ("BO_NO", "BO_TYPE", "CATE_NAME", "BO_TITLE", "BO_CONTENT", "BO_COUNT", "BO_DATE", "MEM_ID", "BO_DELETE_YN") AS 
  SELECT BO_NO, BO_TYPE, CATE_NAME, BO_TITLE, BO_CONTENT, BO_COUNT, BO_DATE, MEM_ID, BO_DELETE_YN
FROM BOARD B
    JOIN MEMBER USING (MEM_NO)
    JOIN CATEGORIES ON(BO_TYPE=CATE_NO)
WHERE B.BO_DELETE_YN = 'N';

-- 24시동물병원
INSERT INTO HOSPITAL VALUES (1, '24시 아이 동물메디컬센터', '경기 부천시 소사로 779, 뉴월드프라자', '0507-1423-5262');
INSERT INTO HOSPITAL VALUES (2, '24시 아이 동물메디컬센터', '경기 부천시 소사로 779, 뉴월드프라자', '0507-1423-5262');
INSERT INTO HOSPITAL VALUES (3, '24시이지동물의료센터', '경기 부천시 부일로 712', '0507-1425-7976');
INSERT INTO HOSPITAL VALUES (4, '파주24시동물병원', '경기 파주시 교하로 87', '0507-1418-5575');
INSERT INTO HOSPITAL VALUES (5, '의정부24시아이유동물메디컬센터', '경기 의정부시 태평로 52', '0507-1446-7588');
INSERT INTO HOSPITAL VALUES (6, '다독다독 동물병원', '경남 김해시 계동로137번길 4-14', '055-331-7582');
INSERT INTO HOSPITAL VALUES (7, '양산24시에스동물메디컬센터', '경남 양산시 물금읍 증산역로 174, 일선프라자 2층', '055-382-2475');
INSERT INTO HOSPITAL VALUES (8, '24시 유니온동물메디컬센터', '경남 창원시 의창구 원이대로56번길 2-35', '0507-1390-5055');
INSERT INTO HOSPITAL VALUES (9, '24시더나은동물메디컬센터', '경남 거제시 고현로 116-1', '0507-1409-1175');
INSERT INTO HOSPITAL VALUES (10, '24시동물병원공감', '광주 광산구 장신로 72', '062-716-2979');
INSERT INTO HOSPITAL VALUES (11, '광주동물메디컬센터', '광주 광산구 북문대로420번길 206', '062-523-0075');
INSERT INTO HOSPITAL VALUES (12, '광주24시스카이동물메디컬센터', '광주 서구 상무대로 879, 두왕빌딩 3,4,5층', '062-719-4275');
INSERT INTO HOSPITAL VALUES (13, '메트로24시응급동물병원', '대구 수성구 국채보상로 1006', '053-755-8355');
INSERT INTO HOSPITAL VALUES (14, '24시범어동물의료센터', '대구 수성구 달구벌대로 2354', '053-716-7585');
INSERT INTO HOSPITAL VALUES (15, '대구24시응급연합동물병원', '대구 수성구 동대구로 36, 3층', '0507-1482-1191');
INSERT INTO HOSPITAL VALUES (16, '웰케어동물병원', '대전 서구 관저북로13번길 23-12, 1층', '0507-1422-2475');
INSERT INTO HOSPITAL VALUES (17, '대전24시센트럴동물병원', '대전 중구 계룡로 789, 1층', '042-719-7779');
INSERT INTO HOSPITAL VALUES (18, '마크로24시동물병원', '대전 서구 한밭대로570번길 8', '042-486-3375');
INSERT INTO HOSPITAL VALUES (19, '해운대24시동물의료원', '부산 해운대구 양운로 45 베르나움상가 1층 101호', '051-702-7582');
INSERT INTO HOSPITAL VALUES (20, '자이안트동물병원', '부산 남구 분포로 111, 엘지메트로시티아파트 주상가 3층 304호', '0507-1407-7582');
INSERT INTO HOSPITAL VALUES (21, '제일2차동물메디컬센터', '부산 금정구 중앙대로 1754, 기찰빌딩 1층', '051-516-1175');
INSERT INTO HOSPITAL VALUES (22, '만덕24시동물병원', '부산 북구 덕천로 227', '051-337-0075');
INSERT INTO HOSPITAL VALUES (23, '미소동물병원', '부산 부산진구 가야대로 754, 한솔폴라리스 2층', '0507-1407-5433');
INSERT INTO HOSPITAL VALUES (24, '고덕24시동물병원', '서울 강동구 동남로 877, 한화오벨리스크스위트 106호', '02-6227-8275');
INSERT INTO HOSPITAL VALUES (25, '24시SKY동물의료센터', '서울 강동구 천호대로 1122', '0507-1414-7581');
INSERT INTO HOSPITAL VALUES (26, '24시페토피아동물병원', '서울 송파구 오금로 203, 남양빌딩', '0507-1434-0075');
INSERT INTO HOSPITAL VALUES (27, '스마트 동물병원', '서울 강남구 선릉로 418', '0507-1432-7582');
INSERT INTO HOSPITAL VALUES (28, '아이윌24시동물병원', '서울 강남구 학동로 437, 일층', '02-6925-7021');
INSERT INTO HOSPITAL VALUES (29, '산들산들 동물병원', '서울 마포구 마포대로16길 7', '02-393-3588');
INSERT INTO HOSPITAL VALUES (30, '안박동물병원', '서울 강서구 양천로 510, 현대프린스텔', '02-3664-7511');
INSERT INTO HOSPITAL VALUES (31, '24시센트럴동물메디컬센터', '서울 성동구 고산자로 207, 무학산부인과', '02-3395-7975');
INSERT INTO HOSPITAL VALUES (32, '신사동물병원', '서울 강남구 도산대로 206, 진성빌딩', '02-549-4505');
INSERT INTO HOSPITAL VALUES (33, '24시지구촌동물메디컬센터', '서울 구로구 구로중앙로31길 30, 유성빌딩', '0507-1401-7582');
INSERT INTO HOSPITAL VALUES (34, '울산24시 에스동물메디컬센터', '울산 남구 삼산로 71', '0507-1406-2475');
INSERT INTO HOSPITAL VALUES (35, '24시부평종합동물의료센터', '인천 부평구 부평대로 138, 2층', '032-511-6836');
INSERT INTO HOSPITAL VALUES (36, '루이스 24시 동물병원', '인천 남동구 백범로 232', '0507-1321-1237');
INSERT INTO HOSPITAL VALUES (37, '24시스카이동물의료센터', '인천 남동구 인주대로 586 거문빌딩', '0507-1308-7959');
INSERT INTO HOSPITAL VALUES (38, '24시 소래동물병원', '인천 남동구 소래역남로16번길 75, 더타워상가 C동 1층 24시소래동물병원', '032-438-3227');
INSERT INTO HOSPITAL VALUES (39, '군산24시제일동물병원', '전북 군산시 진포로 73', '063-461-5079');
INSERT INTO HOSPITAL VALUES (40, '수종합24시동물병원', '전북 전주시 완산구 백제대로 400', '0507-1388-7272');
INSERT INTO HOSPITAL VALUES (41, '에듀동물병원', '제주 서귀포시 대정읍 글로벌에듀로 390, 남영에듀클래스 A동 104호', '0507-1422-7579');
INSERT INTO HOSPITAL VALUES (42, '24시똑똑똑동물메디컬센터', '제주 제주시 도령로 129', '0507-1393-7585');
INSERT INTO HOSPITAL VALUES (43, '24시보듬동물병원', '강원 강릉시 경강로 2070', '033-655-7975');
INSERT INTO HOSPITAL VALUES (44, '청주24시동물병원', '충북 청주시 서원구 사직대로 256', '043-267-4119');
INSERT INTO HOSPITAL VALUES (45, '굿모닝24시동물병원', '충남 천안시 서북구 쌍용대로 43', '041-576-7552');


UPDATE HOSPITAL SET HOS_NAME='라온동물메디컬센터', HOS_ADDR='울산 중구 번영로 524', HOS_PHONE='052-286-5050' WHERE HOS_NO=2;

COMMIT;

INSERT INTO HOSPITAL VALUES (46, '24시 우리들동물메디컬센터', '서울 양천구 목동로 161', '0507-1406-7588');


-- 관리자
INSERT INTO MEMBER VALUES(SEQ_MEMBER_NO.NEXTVAL, 'PM', 'admin', 'admin', '관리자', '000-0000-0000' , null, 'admin@naver.com', DEFAULT);
commit;

ALTER TABLE BOARD MODIFY (BO_TITLE VARCHAR2(100));


-- 봉사신청 명단 테이블
CREATE TABLE JOIN_VOLUNTEER(   
    BO_NO NUMBER(5,0), 
    MEM_NO NUMBER(5,0), 
    CONSTRAINT JOIN_VOLUTEER_FK_BO_NO FOREIGN KEY(BO_NO) REFERENCES BOARD(BO_NO),
    CONSTRAINT JOIN_VOLUTEER_FK_MEM_NO FOREIGN KEY(MEM_NO) REFERENCES MEMBER(MEM_NO)
);
COMMENT ON COLUMN JOIN_VOLUNTEER.BO_NO IS '봉사게시글번호';
COMMENT ON COLUMN JOIN_VOLUNTEER.MEM_NO IS '봉사참여회원번호';

ALTER TABLE P_MEMBER DROP COLUMN PM_VO_LIST;
commit;

ALTER TABLE QUESTIONS ADD (QU_SUB VARCHAR2(200));

COMMENT ON COLUMN QUESTIONS.BO_NO IS '게시판 번호';
COMMENT ON COLUMN QUESTIONS.BO_PW IS '게시글 비밀번호';
COMMENT ON COLUMN QUESTIONS.QU_SUB IS '게시판 분류';

-- 문의사항 뷰
CREATE OR REPLACE FORCE VIEW "TCHD"."QLIST" ("RNUM", "BO_NO", "BO_TYPE", "CATE_NAME", "BO_TITLE", "BO_CONTENT", "BO_COUNT", "BO_DATE", "MEM_NO", "MEM_ID", "BO_DELETE_YN", "MEM_LEAVE", "QU_SUB") AS 
  SELECT ROWNUM RNUM, DESCBOARD."BO_NO",DESCBOARD."BO_TYPE",DESCBOARD."CATE_NAME",DESCBOARD."BO_TITLE",DESCBOARD."BO_CONTENT",DESCBOARD."BO_COUNT",DESCBOARD."BO_DATE",DESCBOARD."MEM_NO",DESCBOARD."MEM_ID",DESCBOARD."BO_DELETE_YN",DESCBOARD."MEM_LEAVE", DESCBOARD."QU_SUB"
FROM (SELECT B.BO_NO, BO_TYPE, CATE_NAME, BO_TITLE, BO_CONTENT, BO_COUNT, BO_DATE, MEM_NO, MEM_ID, BO_DELETE_YN, MEM_LEAVE, QU_SUB
    FROM BOARD B
    JOIN QUESTIONS Q ON (B.BO_NO=Q.BO_NO)
    JOIN CATEGORIES ON (BO_TYPE = CATE_NO)
    JOIN MEMBER USING (MEM_NO)
WHERE BO_DELETE_YN = 'N' AND MEM_LEAVE = 'N'
ORDER BY BO_DATE DESC) DESCBOARD;
    
CREATE OR REPLACE FORCE VIEW "TCHD"."QDETAIL" ("RNUM", "BO_NO", "BO_TYPE", "CATE_NAME", "BO_TITLE", "BO_CONTENT", "BO_COUNT", "BO_DATE", "MEM_ID", "BO_DELETE_YN", "QU_SUB") AS 
  SELECT ROWNUM RNUM, BO_NO, BO_TYPE, CATE_NAME, BO_TITLE, BO_CONTENT, BO_COUNT, BO_DATE, MEM_ID, BO_DELETE_YN, QU_SUB
 FROM(SELECT BO_NO, BO_TYPE, CATE_NAME, BO_TITLE, BO_CONTENT, BO_COUNT, BO_DATE, MEM_ID, BO_DELETE_YN, QU_SUB FROM BOARD B
    JOIN MEMBER USING (MEM_NO)
    JOIN QUESTIONS USING(BO_NO)
    JOIN CATEGORIES ON(BO_TYPE=CATE_NO)
WHERE B.BO_DELETE_YN = 'N'
ORDER BY BO_NO DESC);

-- 봉사신처 뷰
CREATE OR REPLACE VIEW MYVLIST
AS
SELECT  ROWNUM RNUM , V.*
FROM ( SELECT BO_NO, BO_TITLE, V.VO_DATE, VO_PLACE, J.MEM_NO 
FROM VLIST VL 
JOIN VOLUNTEER V USING(BO_NO)
JOIN JOIN_VOLUNTEER J USING(BO_NO)
 ORDER BY VO_DATE DESC) V;
 
-- 마이페이지 리스트 뷰 
CREATE OR REPLACE VIEW MYBOARDLIST 
AS
select ROWNUM RNUM, A.*
FROM(select MEM_NO,BO_NO, BO_TITLE, BO_DATE, CATE_NAME
FROM MEMBER M
join board b using(mem_no)
JOIN CATEGORIES ON(BO_TYPE=CATE_NO) 
UNION ALL
select MEM_NO, com_no BO_NO, com_content BO_TITLE, com_date BO_DATE,  '댓글' CATE_NAME
FROM MEMBER M
join comments b using(mem_no) order by bo_date) A
order by rnum desc;
 
-- 공지사항 상세보기 뷰
CREATE OR REPLACE FORCE VIEW "TCHD"."QLIST" ("RNUM","BO_NO", "BO_TYPE", "CATE_NAME", "BO_TITLE", "BO_CONTENT", "BO_COUNT", "BO_DATE", "MEM_ID", "BO_DELETE_YN", "MEM_LEAVE", "QU_SUB", "BO_PW", "COM_CONTENT", "MEM_NO") AS 
  SELECT ROWNUM RNUM, DESCBOARD."BO_NO",DESCBOARD."BO_TYPE",DESCBOARD."CATE_NAME",DESCBOARD."BO_TITLE",DESCBOARD."BO_CONTENT",DESCBOARD."BO_COUNT",DESCBOARD."BO_DATE",DESCBOARD."MEM_ID",DESCBOARD."BO_DELETE_YN",DESCBOARD."MEM_LEAVE",DESCBOARD."QU_SUB", DESCBOARD."BO_PW", DESCBOARD."COM_CONTENT",DESCBOARD."MEM_NO"
FROM (SELECT B.BO_NO, BO_TYPE, CATE_NAME, BO_TITLE, BO_CONTENT, BO_COUNT, BO_DATE, MEM_ID, BO_DELETE_YN, MEM_LEAVE, QU_SUB, BO_PW, C.COM_CONTENT, B.MEM_NO
FROM BOARD B
JOIN QUESTIONS Q ON (B.BO_NO=Q.BO_NO)
LEFT JOIN COMMENTS C ON (B.BO_NO=C.BO_NO)
JOIN MEMBER M ON(B.MEM_NO=M.MEM_NO)
JOIN CATEGORIES ON (BO_TYPE = CATE_NO)
WHERE BO_DELETE_YN = 'N' AND MEM_LEAVE = 'N'
ORDER BY BO_DATE DESC) DESCBOARD;
 
 
-- 문의사항 상세보기 뷰 
CREATE OR REPLACE FORCE VIEW "TCHD"."QDETAIL" ("RNUM", "BO_NO", "BO_TYPE", "CATE_NAME", "BO_TITLE", "BO_CONTENT", "BO_COUNT", "BO_DATE", "MEM_ID", "BO_DELETE_YN", "QU_SUB", "BO_PW", "COM_CONTENT", "COM_DATE") AS 
  SELECT ROWNUM RNUM, BO_NO, BO_TYPE, CATE_NAME, BO_TITLE, BO_CONTENT, BO_COUNT, BO_DATE, MEM_ID, BO_DELETE_YN, QU_SUB, BO_PW, COM_CONTENT, COM_DATE
 FROM(SELECT B.BO_NO, BO_TYPE, CATE_NAME, BO_TITLE, BO_CONTENT, BO_COUNT, BO_DATE, MEM_ID, BO_DELETE_YN, QU_SUB, BO_PW, COM_CONTENT, COM_DATE ,B.MEM_NO
     FROM BOARD B
     JOIN QUESTIONS Q ON (B.BO_NO=Q.BO_NO)
     LEFT JOIN COMMENTS C ON (B.BO_NO=C.BO_NO)
    JOIN MEMBER M ON(B.MEM_NO=M.MEM_NO)
    JOIN CATEGORIES ON(BO_TYPE=CATE_NO)
WHERE B.BO_DELETE_YN = 'N' 
ORDER BY BO_NO DESC);
 
 
-- 관리자 전용 후원리스트 뷰
CREATE OR REPLACE VIEW ADMINSLIST
AS 
SELECT ROWNUM RNUM, ADS.* FROM 
(SELECT MEM_NO, SUP_NO ,SUP_PRICE, SUP_DATE, NVL(MEM_ID,'-') MEM_ID, NVL(MEM_NAME,'-') MEM_NAME, MEM_TYPE 
FROM SUPPORT LEFT JOIN MEMBER USING(MEM_NO) ORDER BY SUP_DATE DESC) ADS;
 
 commit;

-- 봉사 상세보기 뷰
  CREATE OR REPLACE FORCE VIEW "TCHD"."VDETAIL" ("RNUM", "BO_NO", "BO_TYPE", "CATE_NAME", "VO_AREA", "BO_TITLE", "MEM_NO", "MEM_ID", "BO_DATE", "VO_MAXMEMBER", "VO_APPLYMEMBER", "VO_DATE", "BO_COUNT", "VO_COMMENT", "VO_PLACE", "VO_DEADLINE_YN") AS 
  SELECT ROWNUM RNUM, DESCBOARD."BO_NO",DESCBOARD."BO_TYPE",DESCBOARD."CATE_NAME",DESCBOARD."VO_AREA",DESCBOARD."BO_TITLE",DESCBOARD."MEM_NO",DESCBOARD."MEM_ID",DESCBOARD."BO_DATE",DESCBOARD."VO_MAXMEMBER",DESCBOARD."VO_APPLYMEMBER",DESCBOARD."VO_DATE",DESCBOARD."BO_COUNT",DESCBOARD."VO_COMMENT",DESCBOARD."VO_PLACE", DESCBOARD."VO_DEADLINE_YN"
FROM (SELECT B.BO_NO, BO_TYPE, CATE_NAME, VO_AREA, BO_TITLE, MEM_NO, MEM_ID,
             BO_DATE, VO_MAXMEMBER, VO_APPLYMEMBER, VO_DATE, BO_COUNT, VO_COMMENT, VO_PLACE, VO_DEADLINE_YN
             FROM BOARD B
             JOIN VOLUNTEER V ON(B.BO_NO=V.BO_NO)
             JOIN CATEGORIES ON (BO_TYPE = CATE_NO)
             JOIN MEMBER USING (MEM_NO)
             ORDER BY BO_DATE DESC) DESCBOARD;

-- 봉사신청자 뷰?
CREATE OR REPLACE VIEW CLIST
AS
SELECT COM_NO, COM_CONTENT, C.BO_NO, M.MEM_ID, COM_DATE, COM_DELETE_YN
FROM COMMENTS C
    JOIN MEMBER M ON (C.MEM_NO = M.MEM_NO)
WHERE COM_DELETE_YN = 'N'
ORDER BY COM_NO DESC;

-- 봉사 리스트 뷰
CREATE OR REPLACE VIEW VLIST
AS
SELECT ROWNUM RNUM, DESCBOARD.*
FROM (SELECT B.BO_NO, BO_TYPE, CATE_NAME, VO_AREA, BO_TITLE, MEM_NO, MEM_ID,
             BO_DATE, VO_MAXMEMBER, VO_APPLYMEMBER, VO_DATE, BO_COUNT
             FROM BOARD B
             JOIN VOLUNTEER V ON(B.BO_NO=V.BO_NO)
             JOIN CATEGORIES ON (BO_TYPE = CATE_NO)
             JOIN MEMBER USING (MEM_NO)
             WHERE BO_DELETE_YN = 'N'
             ORDER BY BO_DATE DESC) DESCBOARD;



-- 테스트
ALTER TABLE ADOPT MODIFY (PET_AGE VARCHAR2(20));
SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL;
SELECT SEQ_BOARD_NO.CURRVAL FROM DUAL;
INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 2, '테스트', '내용', SYSDATE, DEFAULT, DEFAULT, 1);
INSERT INTO ADOPT VALUES(SEQ_BOARD_NO.CURRVAL, 2, 'DOG', '포메라니안', 'M', 'O', '베베', 'Puppy/8개월', '2020-08-01', 
                            '3.5', '그레이', 'S', '테스트', DEFAULT);
COMMIT;


DELETE FROM ADOPT;
DELETE FROM BOARD;

DROP SEQUENCE SEQ_BOARD_NO;
DROP SEQUENCE SEQ_FILE_NO;
DROP SEQUENCE SEQ_APPLY_NO;


SELECT SEQ_BOARD_NO.NEXTVAL FROM BOARD;
SELECT SEQ_FILE_NO.NEXTVAL FROM FILES;
SELECT SEQ_BOARD_NO.CURRVAL FROM BOARD;
SELECT SEQ_BOARD_NO.CURRVAL FROM FILES;

SELECT SEQ_BOARD_NO.NEXTVAL FROM ADOPT;

ROLLBACK;

SELECT * FROM QDETAIL WHERE BO_TYPE=2;

-- 문의사항 게시판 테스트
INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 2, '테스트', 'TEST', SYSDATE, DEFAULT, DEFAULT, 2);

-- 입양 신청서 테스트
commit;
SELECT SEQ_APPLY_NO.NEXTVAL FROM ADOPT_APPLY;
SELECT SEQ_APPLY_NO.CURRVAL FROM ADOPT_APPLY;
INSERT INTO ADOPT_APPLY VALUES(SEQ_APPLY_NO.NEXTVAL, 2, SEQ_BOARD_NO.CURRVAL, 'TEST');

SELECT * FROM ADOPT_APPLY WHERE BO_NO = 1;

-- bo_no를 board 참조안하고 그냥 상세보기 bo_no를 가져올 순 없나? 해서 삭제해본 제약조건
ALTER TABLE ADOPT DROP CONSTRAINT ADOPT_CK_YN;
-- 다시 제약조건 넣을 때
ALTER TABLE ADOPT ADD CONSTRAINT ADOPT_CK_YN CHECK (PET_UNIGENDER IN('O', 'X'));

ALTER TABLE ADOPT DROP CONSTRAINT ADOPT_CK_PET_AGE;


-- Board 테이블 update 테스트
UPDATE BOARD SET BO_TITLE='밥먹는베베', BO_CONTENT='DOG, M, O, S, Adult/1살, 밥먹는베베, 강아지, 12.0, 그레이화이트, 2020-08-19, test' WHERE BO_NO=16;
UPDATE ADOPT SET PET_KINDS='DOG', PET_CATEGORY='강아지', PET_GENDER='M', PET_UNIGENDER='O', PET_NAME='밥먹는베베', PET_AGE='Adult/1살', 
                PET_RESCUE_DATE='2020-08-19', PET_WEIGHT=12.0, PET_COLOR='그레이화이트', PET_SIZE='S', PET_COMMENT='test' WHERE BO_NO=16;


-- Files 테이블 update 테스트
UPDATE FILES SET ORIGIN_NAME='증명사진베베.jpg', CHANGE_NAME='202009031337246869TCHD.jpg', FILE_PATH='C:\Users\zmffn\git\TCHD\TCHD\WebContent\upload_imageFiles/'
                WHERE BO_NO=10 AND FILE_LEVEL=1 AND FILE_NO=8;

-- 입양상태 바꾸기 테스트
UPDATE ADOPT SET ADOPT_YN='Y' WHERE BO_NO=13;

-- 파일 상태 바꾸기 테스트
UPDATE FILES SET STATUS='Y' WHERE BO_NO=9;

-- 입양 목록보기 검색
SELECT * FROM ALIST WHERE RNUM BETWEEN 1 AND 6;


-- 봉사 검색
SELECT COUNT(*) FROM VLIST WHERE 'bo_title' LIKE '%test%';
SELECT * FROM (SELECT ROWNUM RNUM2, V.* FROM VLIST V WHERE 'bo_title' LIKE '%select%') WHERE RNUM2 BETWEEN 1 AND 5;

SELECT * FROM (SELECT ROWNUM RNUM2, A.* FROM ALIST A WHERE PET_KINDS='DOG' AND PET_GENDER='M' AND PET_SIZE='S') WHERE RNUM2 BETWEEN 1 AND 5;
SELECT * FROM (SELECT ROWNUM RNUM2, FSEARCH.* FROM FSEARCH WHERE PET_KINDS='' AND PET_GENDER='M' AND PET_SIZE='S') WHERE RNUM2 BETWEEN 1 AND 5;


SELECT ROWNUM RNUM2, FSEARCH.* FROM FSEARCH WHERE PET_KINDS='' AND PET_GENDER='M' AND PET_SIZE='S';

SELECT COUNT(*) FROM ALIST WHERE PET_KINDS='' AND PET_GENDER='M' AND PET_SIZE='S';
SELECT COUNT(*) FROM ALIST;

SELECT COUNT(*) FROM BOARD WHERE BO_TYPE = 1 AND BO_DELETE_YN = 'N';


rollback;
COMMIT;
